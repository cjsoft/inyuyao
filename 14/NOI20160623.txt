
UZASTOPNI(UZASTOPNI.pas/c/cpp)    0.5s/32M
Petar成为了公司CEO，并决定邀请员工庆祝生日。
每个员工都有1到N的编号，Petar自己的编号为1，每个人都准备了一个搞笑程度为Vi的笑话。每个员工都只有一个顶头上司，Petar是其他人的直接或间接上司。
每个参加聚会的人（包括Petar自己），都必须遵守下面规则：
1、在聚会中，不能有两个人讲搞笑程度相同的笑话；
2、如果员工X的上司没有参加聚会，那么员工X不能参加聚会；
3、所有参加聚会的人讲的笑话，搞笑程度排序后都必须相邻。
请问Petar可能听到的笑话组合。

第一行一个整数N(1<=N<=10000)，表示员工总数
第二行N个整数，表示每个员工笑话的Vi(1<=Vi<=100)。
接下来N-1行，每行两个整数A和B(1<=A,B<=N)，表示A是B的上司。

输出不同合法的组合数。

50%的数据，N<=100

input
4
2 1 3 4
1 2
1 3
3 4
output
6
 
 
input
4
3 4 5 6
1 2
1 3
2 4
output
3
 
input
6
5 3 6 4 2 1
1 2
1 3
1 4
2 5
5 6
output
10
样例解释1：可以组成如下组合(2),(2,3),(2,3,4),(1,2,3,4),(1,2),(1,2,3)
样例解释2：可以组成(3),(3,4),(3,4,5)



DRZAVA(DRZAVA.pas/c/cpp)  1s/64MB
一个遥远的国家有N个城市组成。这个国家刚刚竞选出了总理，但是这个国家还没有一条像样的柏油马路。他决定建造一系列的现代化公路，使得国家内每个城市至少有一条马路相连。某个城市属于这个国家，必须有新建道路相连，每个城市只能严格属于一个国家，每个国家由1个或多个城市组成。
每个城市的位置被描述为在一个二维坐标上的点，两个城市间的距离是两点间的直线距离。
由于国家陷入经济危机，总理决定削减预算，他们不能再建造长度超过D的公路。另外，总理还有一个小爱好，他想要看到某个国家内的城市居民总人口是K的倍数。例如，K=4，有三个城市，人口依次为3，5，7，总理会让前两个城市相连，构成一个国家，因为5+3是4的倍数。。。
请你在满足总理要求的基础上，决定最小的D。

第一行两个整数，N和K(1<=N<=50000,1<=K<=30)，代表城市数和总人口的约数。
接下来N行，每行三个整数，xi,yi,ki(0<=xi,yi,ki<=100000000)，表示第i个城市的坐标和人口数。不存在坐标相同的城市，也不存在人口数为K倍数的城市。

输出最小的D，四舍五入到三位小数，数据保证数据有解。

25%的数据N<=1000。

input
3 3
0 4 4
1 5 1
2 6 1
output
1.414
input
6 11
0 0 1
0 1 2
1 0 3
1 1 4
5 5 1
20 20 10
output
5.657
input
6 5
20 20 9
0 0 3
0 1 1
10 0 1
10 1 6
12 0 3
output
2.000

样例解释1：所有城市人口相加，刚好是3的倍数，只要建造两条长度为1.414的路，即可相连。

样例解释2：连接1~5号城市，人口数为11。


DOMINO(DOMINO.pas/c/cpp)    4s/512MB
Mirko收到一个N*N的生日蛋糕，每个格子上面写了一个非负整数。不幸的是，他觉得有些数字太大了，所以他想要用K个多米诺骨牌盖住这些太大的数字。
放骨牌的规则如下：
1、每个骨牌盖住两个格子，这两个格子必须在行或列上相邻。
2、多米诺骨牌不能相互重叠（但是可以相接）。
3、可见的骨牌（未被覆盖）的数字之和尽可能小。
请你放置K个骨牌，使得可见数字尽可能小。保证可以放下K个骨牌。

第一行两个整数N和K(1<=N<=2000,1<=K<=8)，表示蛋糕的大小和骨牌的数量。
接下来N行，每行N个数，表示每个格子上的数字。范围在[0,1000]。

输出最小的可见数字之和。

对于40%的数据，K<=5
输入
3 1
2 7 6
9 5 1
4 3 8
输出
31

输入
4 2
1 2 4 0
4 0 5 4
0 3 5 1
1 0 4 1
输出
17

样例解释1：
盖住9和5

样例解释2：
盖住第三列的4个数字。
